{"version":3,"sources":["components/AnimalCard/AnimalCard.js","components/Jumbotron/Jumbotron.js","components/Navbar/Navbar.js","components/Modal/Modal.js","App.js","index.js"],"names":["AnimalCard","props","react_default","a","createElement","className","onClick","selectAnimal","id","src","image","Jumbotron","Navbar","href","score","topScore","Modal","style","modal","display","opacity","modalMsg","type","data-dismiss","closeModal","App","state","animals","selectedArr","_this","setState","shuffle","indexOf","console","log","push","length","i","j","Math","floor","random","_ref","_this2","this","components_Navbar_Navbar","msg","components_Jumbotron_Jumbotron","map","animal","components_AnimalCard_AnimalCard","name","key","components_Modal_Modal","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"usBAgBeA,SAZI,SAAAC,GAAK,OACpBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,QAAME,QAAS,kBAAML,EAAMM,aAAaN,EAAMO,MAC1CN,EAAAC,EAAAC,cAAA,OAAKK,IAAKR,EAAMS,cCGrBC,SATG,kBACdT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,sCACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,uICIGO,SAPA,SAAAX,GAAK,OAChBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2DACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeQ,KAAK,KAAjC,eACAX,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAd,UAAqCJ,EAAMa,MAA3C,iBAAgEb,EAAMc,aCW/DC,SAfD,SAAAf,GAAK,OACfC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaY,MAAQhB,EAAMiB,MAAS,CAAEC,QAAS,QAASC,QAAS,GAAM,IAClFlB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAeJ,EAAMoB,WAEvCnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,UAAQkB,KAAK,SAASjB,UAAU,oBAAoBkB,eAAa,QAAQjB,QAASL,EAAMuB,YAAxF,sBC0GLC,6MA5GXC,MAAQ,CACJC,UACAC,YAAa,GACbd,MAAO,EACPC,SAAU,EACVG,OAAO,EACPG,SAAU,MAGdd,aAAe,SAAAC,GAGXqB,EAAKC,SAAS,CAAEH,QAASE,EAAKE,QAAQF,EAAKH,MAAMC,YAGL,IAAxCE,EAAKH,MAAME,YAAYI,QAAQxB,IAE/ByB,QAAQC,KAAI,GACZD,QAAQC,IAAI,OAAS1B,GAErBqB,EAAKH,MAAME,YAAYO,KAAK3B,GAE5ByB,QAAQC,IAAI,UAAYL,EAAKH,MAAME,aAEnCC,EAAKC,SAAS,CACVF,YAAaC,EAAKH,MAAME,YACxBd,MAAOe,EAAKH,MAAMZ,MAAQ,MAG9BmB,QAAQC,KAAI,GAEZL,EAAKC,SAAS,CACVhB,MAAO,EACPc,YAAa,GACbV,OAAO,EACPG,SAAU,wDAGVQ,EAAKH,MAAMZ,MAAQe,EAAKH,MAAMX,UAC9Bc,EAAKC,SAAS,CACVf,SAAUc,EAAKH,MAAMZ,SAK7Be,EAAKH,MAAME,YAAYQ,SAAWP,EAAKH,MAAMC,QAAQS,QACrDP,EAAKC,SAAS,CACVZ,OAAO,EACPG,SAAU,gDAMtBU,QAAU,SAAA5B,GACN,IAAK,IAAIkC,EAAIlC,EAAEiC,OAAS,EAAGC,EAAI,EAAGA,IAAK,CACnC,IAAMC,EAAIC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAI,IADPK,EAEpB,CAACvC,EAAEmC,GAAInC,EAAEkC,IAAvBlC,EAAEkC,GAFgCK,EAAA,GAE5BvC,EAAEmC,GAF0BI,EAAA,GAIvC,OAAOvC,KAGXqB,WAAa,WACTK,EAAKC,SAAS,CACVZ,OAAO,IAGiB,6CAAxBW,EAAKH,MAAML,UACXQ,EAAKC,SAAS,CACVF,YAAa,GACbd,MAAO,EACPC,SAAU,6EAMb,IAAA4B,EAAAC,KACL,OACI1C,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACyC,EAAD,CACIC,IAAKF,KAAKlB,MAAMoB,IAChBhC,MAAO8B,KAAKlB,MAAMZ,MAClBC,SAAU6B,KAAKlB,MAAMX,WAEzBb,EAAAC,EAAAC,cAAC2C,EAAD,MAECH,KAAKlB,MAAMC,QAAQqB,IAAI,SAAAC,GAAM,OAC1B/C,EAAAC,EAAAC,cAAC8C,EAAD,CACI3C,aAAcoC,EAAKpC,aACnBC,GAAIyC,EAAOzC,GACX2C,KAAMF,EAAOE,KACbzC,MAAOuC,EAAOvC,MACd0C,IAAKH,EAAOzC,OAIpBN,EAAAC,EAAAC,cAACiD,EAAD,CACInC,MAAO0B,KAAKlB,MAAMR,MAClBM,WAAYoB,KAAKpB,WACjBH,SAAUuB,KAAKlB,MAAML,mBAtGvBiC,aCHlBC,IAASC,OAAOtD,EAAAC,EAAAC,cAACqD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.4d10a3b3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./AnimalCard.css\";\r\n\r\n// TODO: center all AnimalCards in CSS\r\nconst AnimalCard = props => (\r\n    <div className=\"card-container container\">\r\n        <div className=\"card\">\r\n            <div className=\"card-img-top\">\r\n                <span onClick={() => props.selectAnimal(props.id)}>\r\n                    <img src={props.image} />\r\n                </span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default AnimalCard;","import React from \"react\";\r\nimport \"./Jumbotron.css\";\r\n\r\nconst Jumbotron = () => (\r\n    <div className=\"jumbotron jumbotron-fluid\">\r\n        <div className=\"container\">\r\n            <h1 className=\"display-4\">Click on an animal to get started!</h1>\r\n            <p className=\"lead\">Click on a new image every turn to earn a point. If you click on an image twice, the game is over. Try to beat your high score!</p>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Jumbotron;","import React from \"react\";\r\nimport \"./Navbar.css\";\r\n\r\n// TODO: fix styling with separate CSS\r\nconst Navbar = props => (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light fixed-top\">\r\n        <a className=\"navbar-brand\" href=\"/\">Clicky Game</a>\r\n        <h5 className=\"navbar-score\">Score: {props.score} | Top Score: {props.topScore}</h5>\r\n    </nav>\r\n);\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport \"./Modal.css\";\r\n\r\nconst Modal = props => (\r\n    <div className=\"modal fade\" style={(props.modal) ? { display: \"block\", opacity: 1 } : {}}>\r\n        <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h4 className=\"modal-title\">{props.modalMsg}</h4>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\" onClick={props.closeModal}>Close</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Modal;","import React, { Component } from \"react\";\nimport AnimalCard from \"./components/AnimalCard/AnimalCard.js\";\nimport Jumbotron from \"./components/Jumbotron/Jumbotron.js\";\nimport Navbar from \"./components/Navbar/Navbar.js\";\nimport Modal from \"./components/Modal/Modal.js\";\nimport animals from \"./animals.json\";\n\nclass App extends Component {\n    // Setting this.state.animals to the animals json array\n    state = {\n        animals,\n        selectedArr: [],\n        score: 0,\n        topScore: 0,\n        modal: false,\n        modalMsg: \"\"\n    };\n\n    selectAnimal = id => {\n\n        // randomize animals array to start\n        this.setState({ animals: this.shuffle(this.state.animals) });\n\n        // if the user clicks on an image for the first time, push that id to the selectedArr and officially set the state for selectedArr\n        if (this.state.selectedArr.indexOf(id) === -1) {\n\n            console.log(true);\n            console.log(\"id: \" + id);\n\n            this.state.selectedArr.push(id);\n\n            console.log(\"array: \" + this.state.selectedArr);\n\n            this.setState({\n                selectedArr: this.state.selectedArr,\n                score: this.state.score + 1\n            });\n        } else {\n            console.log(false);\n\n            this.setState({\n                score: 0,\n                selectedArr: [],\n                modal: true,\n                modalMsg: \"Game over! Click OK to try and beat your top score.\"\n            });\n\n            if (this.state.score > this.state.topScore) {\n                this.setState({\n                    topScore: this.state.score\n                });\n            }\n        }\n\n        if (this.state.selectedArr.length === this.state.animals.length) {\n            this.setState({\n                modal: true,\n                modalMsg: \"You clicked on all the images!! You win!\"\n            });\n        }\n    };\n\n    // function to shuffle array\n    shuffle = a => {\n        for (let i = a.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [a[i], a[j]] = [a[j], a[i]];\n        }\n        return a;\n    };\n    \n    closeModal = () => {\n        this.setState({\n            modal: false\n        });\n\n        if (this.state.modalMsg === \"You clicked on all the images!! You win!\") {\n            this.setState({\n                selectedArr: [],\n                score: 0,\n                topScore: 0\n            });\n        }\n    };\n\n    // Map over this.state.animals and render a AnimalCard component for each animal object\n    render() {\n        return (\n            <div>\n                <Navbar\n                    msg={this.state.msg}\n                    score={this.state.score}\n                    topScore={this.state.topScore}\n                />\n                <Jumbotron />\n\n                {this.state.animals.map(animal => (\n                    <AnimalCard\n                        selectAnimal={this.selectAnimal}\n                        id={animal.id}\n                        name={animal.name}\n                        image={animal.image}\n                        key={animal.id}\n                    />\n                ))}\n\n                <Modal\n                    modal={this.state.modal} \n                    closeModal={this.closeModal} \n                    modalMsg={this.state.modalMsg}\n                />\n\n            </div>\n        );\n    };\n}\n\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}